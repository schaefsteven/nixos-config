set $mod Mod4
set $alt Mod1

set $left h
set $down j
set $up k
set $right l

set $power 202
set $hamburger 135
set $search 225
set $home 180

# remote top buttons
bindcode $hamburger workspace next
bindcode $home workspace "launcher"
bindcode $power kill

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+semicolon exec --no-startup-id alacritty

# kill focused window
bindsym $mod+$alt+q kill

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left 40px
bindsym $mod+Shift+$down move down 40px
bindsym $mod+Shift+$up move up 40px
bindsym $mod+Shift+$right move right 40px

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+$alt+v split h

# split in vertical orientation
bindsym $mod+$alt+x split v

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+$alt+s layout stacking - I would never use stacking
bindsym $mod+$alt+w layout tabbed
bindsym $mod+$alt+s layout toggle split

# toggle tiling / floating
bindsym $mod+$alt+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+$alt+space focus mode_toggle

# focus the parent container
bindsym $mod+$alt+a focus parent

# focus the child container
bindsym $mod+$alt+d focus child

# vars for monitors
set $monLeft HDMI-A-1
set $monCenter DisplayPort-0
set $monRight HDMI-A-0

# scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# workspaces

set $wsq "Q"
set $wsw "W" 
set $wse "E" 
set $wsr "R" 
set $wst "T"
set $wsy "Y"
set $wsu "U"
set $wsi "I"
set $wso "O"
set $wsp "P"
set $wsa "A"
set $wss "S"
set $wsd "D"
set $wsf "F"
set $wsg "G"
set $wsz "Z"
set $wsx "X"
set $wsc "C"
set $wsv "V"
set $wsb "B"
set $wsn "N"
set $wsm "M"
set $wsComma "Comma"
set $wsPeriod "Period"
set $wsSlash "Slash"
set $wsMain "helloMain"

bindsym $mod+q workspace $wsq
bindsym $mod+w workspace $wsw
bindsym $mod+e workspace $wse
bindsym $mod+r workspace $wsr
bindsym $mod+t workspace $wst
bindsym $mod+y workspace $wsy
bindsym $mod+u workspace $wsu
bindsym $mod+i workspace $wsi
bindsym $mod+o workspace $wso
bindsym $mod+p workspace $wsp
bindsym $mod+a workspace $wsa
bindsym $mod+s workspace $wss
bindsym $mod+d workspace $wsd
bindsym $mod+f workspace $wsf
bindsym $mod+g workspace $wsg
bindsym $mod+z workspace $wsz
bindsym $mod+x workspace $wsx
bindsym $mod+c workspace $wsc
bindsym $mod+v workspace $wsv
bindsym $mod+b workspace $wsb
bindsym $mod+n workspace $wsn
bindsym $mod+m workspace $wsm
bindsym $mod+comma workspace $wsComma
bindsym $mod+period workspace $wsPeriod
bindsym $mod+slash workspace $wsSlash
bindsym $mod+space workspace $wsMain

bindsym $mod+Shift+q move container to workspace $wsq; workspace $wsq
bindsym $mod+Shift+w move container to workspace $wsw; workspace $wsw
bindsym $mod+Shift+e move container to workspace $wse; workspace $wse
bindsym $mod+Shift+r move container to workspace $wsr; workspace $wsr
bindsym $mod+Shift+t move container to workspace $wst; workspace $wst
bindsym $mod+Shift+y move container to workspace $wsy; workspace $wsy
bindsym $mod+Shift+u move container to workspace $wsu; workspace $wsu
bindsym $mod+Shift+i move container to workspace $wsi; workspace $wsi
bindsym $mod+Shift+o move container to workspace $wso; workspace $wso
bindsym $mod+Shift+p move container to workspace $wsp; workspace $wsp
bindsym $mod+Shift+a move container to workspace $wsa; workspace $wsa
bindsym $mod+Shift+s move container to workspace $wss; workspace $wss
bindsym $mod+Shift+d move container to workspace $wsd; workspace $wsd
bindsym $mod+Shift+f move container to workspace $wsf; workspace $wsf
bindsym $mod+Shift+g move container to workspace $wsg; workspace $wsg
bindsym $mod+Shift+z move container to workspace $wsz; workspace $wsz
bindsym $mod+Shift+x move container to workspace $wsx; workspace $wsx
bindsym $mod+Shift+c move container to workspace $wsc; workspace $wsc
bindsym $mod+Shift+v move container to workspace $wsv; workspace $wsv
bindsym $mod+Shift+b move container to workspace $wsb; workspace $wsb
bindsym $mod+Shift+n move container to workspace $wsn; workspace $wsn
bindsym $mod+Shift+m move container to workspace $wsm; workspace $wsm
bindsym $mod+Shift+comma move container to workspace $wsComma; workspace $wsComma
bindsym $mod+Shift+period move container to workspace $wsPeriod; workspace $wsPeriod
bindsym $mod+Shift+slash move container to workspace $wsSlash; workspace $wsSlash
bindsym $mod+Shift+space move container to workspace $wsMain; workspace $wsMain

workspace $wsq output $monLeft
workspace $wsw output $monLeft
workspace $wse output $monLeft
workspace $wsr output $monLeft
workspace $wst output $monLeft
workspace $wsy output $monRight
workspace $wsu output $monRight
workspace $wsi output $monRight
workspace $wso output $monRight
workspace $wsp output $monRight
workspace $wsa output $monCenter
workspace $wss output $monCenter
workspace $wsd output $monCenter
workspace $wsf output $monCenter
workspace $wsg output $monCenter
# workspace $wsz output 
# workspace $wsx output 
# workspace $wsc output 
# workspace $wsv output 
# workspace $wsb output 
# workspace $wsn output 
# workspace $wsm output 
# workspace $wsComma output 
# workspace $wsPeriod output 
# workspace $wsSlash output 
workspace $wsMain output $monCenter


# Wokspaces numbered (default)

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace number $ws10

# move workspaces between monitors
# bindsym $mod+Control+space move workspace to output $mon1
# bindsym $mod+Control+a move workspace to output PORT-B
# bindsym $mod+Control+q move workspace to output PORT-T
# bindsym $mod+Control+n move workspace to output $mon3

# reload the configuration file
bindsym $mod+$alt+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+$alt+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+$alt+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left resize shrink width 10 px or 10 ppt
        bindsym $up resize grow height 10 px or 10 ppt
        bindsym $down resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+$alt+j mode "default"
}

bindsym $mod+$alt+j mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
		mode hide
		tray_output primary
		colors {
			focused_workspace #572100 #8A3500 #000000
		}
}

# Colors
# class                 border  backgr. text    indicator child_border
client.focused          #572100 #8A3500 #000000 #572100   #572100
client.focused_inactive #000000 #000000 #ffffff #000000   #000000
client.unfocused        #000000 #000000 #888888 #000000   #000000
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #000000

focus_follows_mouse no
mouse_warping none
workspace_auto_back_and_forth no
default_border pixel 3
default_floating_border pixel 3

# force border on windows that override them
for_window [all] border pixel 3

# picom commpositor
exec --no-startup-id picom

# rofi
bindsym $mod+Return exec --no-startup-id rofi -show combi -modi "calc#combi" -calc-command "echo -n '{result}' | xclip -selection clipboard" -automatic-save-to-history
bindsym $mod+$alt+p exec --no-startup-id rofi -show power -modi "power:rofi-power-menu --choices=shutdown/reboot/suspend/logout"

# Focus the main workspace
exec --no-startup-id i3-msg 'workspace Main'

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id dex --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork -c '#282828'

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# exec --no-startup-id nm-applet

exec --no-startup-id nitrogen --restore

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

